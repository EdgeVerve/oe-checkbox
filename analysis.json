{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# oe-checkbox-group\n`oe-checkbox-group` is a wrapper over `iron-selector` and `paper-checkbox` that auto-generates the underlying `paper-checkboxes` based on provided `listdata`.",
      "summary": "",
      "path": "oe-checkbox-group.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "label for control",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "value, this control is bound to.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "listdata",
          "type": "Array | null | undefined",
          "description": "listdata to display as Checkbox.\n* When specified as array of premitives (string/number), leave displayproperty and valueproperty as undefined.\n* When specified as array of Objects/{d:...,v:...}, specify displayproperty to control which property is displayed\n   as label on the choices. When  valueproperty is not defined, enire member object is set as `value`, otherwise\n   specified property reflects into `value`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "displayproperty",
          "type": "string | null | undefined",
          "description": "When `listdata` is specified as array of Objects/{d:...,v:...}, displayproperty controls which property\nis displayed as label on the choices.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueproperty",
          "type": "string | null | undefined",
          "description": "When `listdata` is specified as array of Objects/{d:...,v:...}\n* If valueproperty is not defined, entire member object is set as `value`,\n* otherwise specified `valueproperty` reflects into `value`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Required",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_validate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "choice"
            }
          ]
        },
        {
          "name": "_getDisplay",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "choice"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/demo-oe-checkbox-group.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 176,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeCheckboxGroup",
      "attributes": [
        {
          "name": "label",
          "description": "label for control",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "value, this control is bound to.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "listdata",
          "description": "listdata to display as Checkbox.\n* When specified as array of premitives (string/number), leave displayproperty and valueproperty as undefined.\n* When specified as array of Objects/{d:...,v:...}, specify displayproperty to control which property is displayed\n   as label on the choices. When  valueproperty is not defined, enire member object is set as `value`, otherwise\n   specified property reflects into `value`.",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 6
            },
            "end": {
              "line": 105,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "displayproperty",
          "description": "When `listdata` is specified as array of Objects/{d:...,v:...}, displayproperty controls which property\nis displayed as label on the choices.",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "valueproperty",
          "description": "When `listdata` is specified as array of Objects/{d:...,v:...}\n* If valueproperty is not defined, entire member object is set as `value`,\n* otherwise specified `valueproperty` reflects into `value`.",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 6
            },
            "end": {
              "line": 122,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 129,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "Required",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "listdata-changed",
          "description": "Fired when the `listdata` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-checkbox-group",
      "mixins": [
        "OEFieldMixin"
      ]
    },
    {
      "description": "# oe-checkbox\n\n`<oe-checkbox>` is a control for boolean input based on Polymer's `paper-checkbox` control with following additional features.\n\n## Features\n  1. Control level validations.\n  2. Model-level/cross-field validations. When any UI control is placed on the form, the control needs to be 'aware' of 'which property' on the model it is bound to. This is required specially since, many times two or more controls take part in deciding the model validity. (cross-field-validations)\n  3. Support internationalization of labels\n\n    <oe-checkbox required field-id=\"accountName\" label=\"Account Name\"></oe-checkbox>",
      "summary": "",
      "path": "oe-checkbox.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "Boolean value property bound to `checked` property of underlying `paper-checkbox`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Boolean disabled property bound to `disabled` property of underlying `paper-checkbox`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_validate",
          "description": "Local validations to always set field validation as true.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "valid flag as true"
          }
        },
        {
          "name": "connectedCallback",
          "description": "Connected Callback to initiate 'change' listener with validation function.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/demo-oe-checkbox.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 91,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeCheckbox",
      "attributes": [
        {
          "name": "label",
          "description": "the label",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "Boolean value property bound to `checked` property of underlying `paper-checkbox`",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Boolean disabled property bound to `disabled` property of underlying `paper-checkbox`",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-checkbox",
      "mixins": [
        "OEFieldMixin"
      ]
    }
  ]
}
